Problem Statement

You are given a int[]Awith N elements, where N is even.
Note that some elements ofAmay be negative.
You are also given a intXwhich is guaranteed to be negative.
You must divide the elements ofAinto N/2 disjoint pairs.
(That is, each element ofAmust be in exactly one of those pairs.)
Your goal is to maximize the number of pairs in which the product of the two elements is greater than or equal toX.
Return the largest possible number of such pairs.  

Definition

Class:  SplitIntoPairs  

Method:  makepairs  

Parameters:  int[], int  

Returns:  int  

Method signature:  int makepairs(int[] A, int X)  

(be sure your method is public)  

Constraints

-  Awill contain between 2 and 50 elements, inclusive.  

-  The number of elements inAwill be even.  

-  Each element inAwill be between -1,000,000,000 and 1,000,000,000, inclusive.  

-  Xwill be between -1,000,000,000 and -1, inclusive.  

Examples

0)  

{2,-1}

-1

Returns: 0

One possible pair has product -2, which is lower than needed.  

1)  

{1,-1}

-1

Returns: 1

Here product is -1, it's enough.  

2)  

{-5,-4,2,3}

-1

Returns: 2

If first pair contains numbers -5 and -4, and second contains 2 and 3, both will have positive product.  

3)  

{5,-7,8,-2,-5,3}

-7

Returns: 3

Acceptable splitting is {5,8}, {-7,-5} and {-2,3}.  

4)  

{3,4,5,6,6,-6,-4,-10,-1,-9}

-2

Returns: 4

5)  

{1000000,1000000}

-5

Returns: 1

Beware overflow.  

This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.


Problem Authod: subscriber
Contest name: SRM 603
