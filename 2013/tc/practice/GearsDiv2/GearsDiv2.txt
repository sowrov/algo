Problem Statement

Goose Tattarrattat has a machine that contains N gears (cogwheels).
The gears are numbered 0 through N-1.
Currently, the gears are arranged into a cycle: for each i, gear i meshes with gears i-1 and i+1 (counting modulo N).
In particular, gear 0 meshes with gear N-1.

Let X and Y be two meshing gears.
Note that if X is turning, Y must clearly be turning in the opposite direction (clockwise vs. counter-clockwise).

For each of the N gears we have a desired direction of turning.
You are given this information encoded as a StringDirections.
Character i ofDirectionsis 'R' if we want gear i to turn to the right (clockwise), and it is 'L' if we want it to turn to the left.

Of course, it may be impossible to satisfy all the desired directions of turning.
Return the minimal number of gears that have to be removed from the machine so that all remaining gears can turn in the desired directions at the same time.

Definition

Class:  GearsDiv2  

Method:  getmin  

Parameters:  String  

Returns:  int  

Method signature:  int getmin(String Directions)  

(be sure your method is public)  

Notes

-  Removing a gear creates a gap between the other gears. For example, after removing the gear 7, gears 6 and 8 will not mesh.  

Constraints

-  Directionswill contain between 3 and 50 characters, inclusive.  

-  Each character ofDirectionswill be 'R' or 'L'.  

Examples

0)  

"LRRR"

Returns: 1

Once we remove gear 2, the other three are free to turn in the desired directions.  

1)  

"RRR"

Returns: 2

Gear 0 meshes with gear 2.  

2)  

"LRLR"

Returns: 0

3)  

"LRLLRRLLLRRRLLLL"

Returns: 6

4)  

"RRRRRRRLRRRRRRRLRLRLLRLRLRLRRLRLRLLLRLRLLRLLRRLRRR"

Returns: 14

This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.


Problem Authod: snuke
Contest name: SRM 589
