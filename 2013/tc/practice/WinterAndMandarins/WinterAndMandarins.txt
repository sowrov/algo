Problem Statement

It's winter time!
Time to eat a lot of mandarins with your friends.

You have several bags with mandarins.
You are given an int[]bags.
For each i, the i-th element ofbagsrepresents the number of mandarins in the i-th bag.
You are also given an intK.
You want to choose exactlyKbags and distribute them among you and your friends.
To be as fair as possible, you want to minimize the difference between the chosen bag with most mandarins and the chosen bag with fewest mandarins.
Return the smallest difference that can be achieved.

Definition

Class:  WinterAndMandarins  

Method:  getNumber  

Parameters:  int[], int  

Returns:  int  

Method signature:  int getNumber(int[] bags, int K)  

(be sure your method is public)  

Constraints

-  bagswill contain between 2 and 50 elements, inclusive.  

-  Each element ofbagswill be between 1 and 1,000,000,000, inclusive.  

-  Kwill be between 2 and N, inclusive, where N is the number of elements inbags.  

Examples

0)  

{10, 20, 30}

2

Returns: 10

There are three ways to choose two bags in this case: {10, 20}, {20, 30}, and {10, 30}.
Both in the first case and in the second case the difference between the largest and the smallest number of mandarins is 10.
In the third case the difference is 20.
Thus, the smallest possible difference is 10.  

1)  

{4, 7, 4}

3

Returns: 3

2)  

{4, 1, 2, 3}

3

Returns: 2

3)  

{5, 4, 6, 1, 9, 4, 2, 7, 5, 6}

4

Returns: 1

4)  

{47, 1000000000, 1, 74}

2

Returns: 27

This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.


Problem Authod: Witaliy
Contest name: SRM 601
